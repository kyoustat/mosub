tester = gen.LP(shape=1, scale=5, sig2=0.05)
data   = tester$data
label  = tester$class
## do PCA for data reduction
proj = base::eigen(stats::cov(data))$vectors[,1:2]
dat2 = data%*%proj
## visualize
opar <- par(mfrow=c(2,2))
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=label,main="PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=label,main="Axis 1 vs 2")
plot(data[,1],data[,3],pch=19,cex=0.5,col=label,main="Axis 1 vs 3")
plot(data[,2],data[,3],pch=19,cex=0.5,col=label,main="Axis 2 vs 3")
## test for visualization
tester = gen.LP(shape=1, scale=5, sig2=0.05)
data   = tester$data
label  = tester$class
## do PCA for data reduction
proj = base::eigen(stats::cov(data))$vectors[,1:2]
dat2 = data%*%proj
## visualize
opar <- par(mfrow=c(2,2))
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=label,main="PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=label,main="Axis 1 vs 2")
plot(data[,1],data[,3],pch=19,cex=0.5,col=label,main="Axis 1 vs 3")
plot(data[,2],data[,3],pch=19,cex=0.5,col=label,main="Axis 2 vs 3")
## test for visualization
tester = gen.LP(shape=1, scale=5, sig2=0.05)
data   = tester$data
label  = tester$class
## do PCA for data reduction
proj = base::eigen(stats::cov(data))$vectors[,1:2]
dat2 = data%*%proj
## visualize
opar <- par(mfrow=c(2,2))
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=label,main="PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=label,main="Axis 1 vs 2")
plot(data[,1],data[,3],pch=19,cex=0.5,col=label,main="Axis 1 vs 3")
plot(data[,2],data[,3],pch=19,cex=0.5,col=label,main="Axis 2 vs 3")
library(UnivRNG)
## test for visualization
tester = gen.LP(shape=2, scale=5, sig2=0.05)
data   = tester$data
label  = tester$class
## do PCA for data reduction
proj = base::eigen(stats::cov(data))$vectors[,1:2]
dat2 = data%*%proj
## visualize
opar <- par(mfrow=c(2,2))
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=label,main="PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=label,main="Axis 1 vs 2")
plot(data[,1],data[,3],pch=19,cex=0.5,col=label,main="Axis 1 vs 3")
plot(data[,2],data[,3],pch=19,cex=0.5,col=label,main="Axis 2 vs 3")
tester = gen.LP(shape=2, scale=5, sig2=1)
data   = tester$data
label  = tester$class
## do PCA for data reduction
proj = base::eigen(stats::cov(data))$vectors[,1:2]
dat2 = data%*%proj
## visualize
opar <- par(mfrow=c(2,2))
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=label,main="PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=label,main="Axis 1 vs 2")
plot(data[,1],data[,3],pch=19,cex=0.5,col=label,main="Axis 1 vs 3")
plot(data[,2],data[,3],pch=19,cex=0.5,col=label,main="Axis 2 vs 3")
## test for visualization
tester = gen.LP(shape=2, scale=5, sig2=0.1)
data   = tester$data
label  = tester$class
## do PCA for data reduction
proj = base::eigen(stats::cov(data))$vectors[,1:2]
dat2 = data%*%proj
## visualize
opar <- par(mfrow=c(2,2))
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=label,main="PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=label,main="Axis 1 vs 2")
plot(data[,1],data[,3],pch=19,cex=0.5,col=label,main="Axis 1 vs 3")
plot(data[,2],data[,3],pch=19,cex=0.5,col=label,main="Axis 2 vs 3")
tester = gen.LP(shape=2, scale=5, sig2=0.05)
data   = tester$data
label  = tester$class
## do PCA for data reduction
proj = base::eigen(stats::cov(data))$vectors[,1:2]
dat2 = data%*%proj
## visualize
opar <- par(mfrow=c(2,2))
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=label,main="PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=label,main="Axis 1 vs 2")
plot(data[,1],data[,3],pch=19,cex=0.5,col=label,main="Axis 1 vs 3")
plot(data[,2],data[,3],pch=19,cex=0.5,col=label,main="Axis 2 vs 3")
tester = gen.LP(shape=2, scale=5, sig2=0.05)
data   = tester$data
label  = tester$class
## do PCA for data reduction
proj = base::eigen(stats::cov(data))$vectors[,1:2]
dat2 = data%*%proj
## visualize
opar <- par(mfrow=c(2,2))
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=label,main="PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=label,main="Axis 1 vs 2")
plot(data[,1],data[,3],pch=19,cex=0.5,col=label,main="Axis 1 vs 3")
plot(data[,2],data[,3],pch=19,cex=0.5,col=label,main="Axis 2 vs 3")
set.seed(10)
tester = gen.LP(shape=2, scale=5, sig2=0.05)
data   = tester$data
label  = tester$class
## do PCA for data reduction
proj = base::eigen(stats::cov(data))$vectors[,1:2]
dat2 = data%*%proj
## visualize
opar <- par(mfrow=c(2,2))
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=label,main="PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=label,main="Axis 1 vs 2")
plot(data[,1],data[,3],pch=19,cex=0.5,col=label,main="Axis 1 vs 3")
plot(data[,2],data[,3],pch=19,cex=0.5,col=label,main="Axis 2 vs 3")
library(mosub)
set.seed(10)
tester = gen.LP(shape=2, scale=5, sig2=0.05)
data   = tester$data
label  = tester$class
## do PCA for data reduction
proj = base::eigen(stats::cov(data))$vectors[,1:2]
dat2 = data%*%proj
## visualize
opar <- par(mfrow=c(2,2))
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=label,main="PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=label,main="Axis 1 vs 2")
plot(data[,1],data[,3],pch=19,cex=0.5,col=label,main="Axis 1 vs 3")
plot(data[,2],data[,3],pch=19,cex=0.5,col=label,main="Axis 2 vs 3")
set.seed(10)
tester = gen.LP(shape=2, scale=5, sig2=0.05)
data   = tester$data
label  = tester$class
## do PCA for data reduction
proj = base::eigen(stats::cov(data))$vectors[,1:2]
dat2 = data%*%proj
## visualize
opar <- par(mfrow=c(2,2))
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=label,main="PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=label,main="Axis 1 vs 2")
plot(data[,1],data[,3],pch=19,cex=0.5,col=label,main="Axis 1 vs 3")
plot(data[,2],data[,3],pch=19,cex=0.5,col=label,main="Axis 2 vs 3")
set.seed(10)
tester = gen.LP(shape=2, scale=5, sig2=0.05)
data   = tester$data
label  = tester$class
## do PCA for data reduction
proj = base::eigen(stats::cov(data))$vectors[,1:2]
dat2 = data%*%proj
## visualize
opar <- par(mfrow=c(2,2))
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=label,main="PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=label,main="Axis 1 vs 2")
plot(data[,1],data[,3],pch=19,cex=0.5,col=label,main="Axis 1 vs 3")
plot(data[,2],data[,3],pch=19,cex=0.5,col=label,main="Axis 2 vs 3")
library(mosub)
output = msm(data, K=2, iter=1000)
length(output)
output[[1]]
output[[2]]
library(mosub)
output = msm(data, K=2, iter=1000)
output = msm(data, K=3, iter=1000)
output = msm(data, K=3, iter=1000)
library(mosub)
output = msm(data, K=3, iter=1000)
library(mosub)
output = msm(data, K=3, iter=1000)
output = msm(data, K=3, iter=1000)
output = msm(data, K=2, iter=1000)
library(mosub)
output = msm(data, K=2, iter=1000)
library(mosub)
output = msm(data, K=2, iter=1000)
output = msm(data, K=3, iter=1000)
output = msm(data, K=3, iter=1000)
output = msm(data, K=3, iter=1000)
output = msm(data, K=3, iter=1000)
output = msm(data, K=3, iter=1000)
library(mosub)
output = msm(data, K=3, iter=1000)
library(mosub)
output = msm(data, K=3, iter=1000)
library(mosub)
output = msm(data, K=3, iter=1000)
library(mosub)
output = msm(data, K=3, iter=1000)
library(mosub)
output = msm(data, K=3, iter=1000)
library(mosub)
output = msm(data, K=3, iter=1000)
wi = matrix(runif(10*5),ncol=5)
wi = wi/rowSums(wi)
n = nrow(wi)
k = ncol(wi)
iteration = 100000
for (i in 1:iteration){
labels = rep(0,n)
for (j in 1:n){
labels[j] = sample(1:k, 1, prob = wi[j,])
}
if (length(unique(labels))==k){
return(labels)
} else {
print(paste("try : ",i,"/ number of clusters=",length(unique(labels))))
}
}
iteration = 100000
for (i in 1:iteration){
labels = rep(0,n)
for (j in 1:n){
labels[j] = sample(1:k, 1, prob = wi[j,])
}
if (length(unique(labels))==k){
print("success")
break
} else {
print(paste("try : ",i,"/ number of clusters=",length(unique(labels))))
}
}
wi
ncol(wi)
library(mosub)
output = msm(data, K=3, iter=1000)
library(mosub)
output = msm(data, K=3, iter=1000)
library(mosub)
output = msm(data, K=3, iter=1000)
library(mosub)
output = msm(data, K=3, iter=1000)
output$P.mat
output$U.mat
library(mosub)
output2 = msm(data, K=2, iter=1000)
output2$clusters
library(mosub)
output2 = msm(data, K=2, iter=1000)
finc2 = output2$cluster[[1000]]
opar <- par(mfrow=c(2,4))
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=finc2,main="K=2:PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=finc2,main="K=2:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.5,col=finc2,main="K=2:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.5,col=finc2,main="K=2:Axis(2,3)")
opar <- par(mfrow=c(2,4))
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=finc2,main="K=2:PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=finc2,main="K=2:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.5,col=finc2,main="K=2:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.5,col=finc2,main="K=2:Axis(2,3)")
output3 = msm(data, K=3, iter=1000)
## visualize
opar <- par(mfrow=c(2,4))
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=finc2,main="K=2:PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=finc2,main="K=2:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.5,col=finc2,main="K=2:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.5,col=finc2,main="K=2:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=finc3,main="K=3:PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=finc3,main="K=3:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.5,col=finc3,main="K=3:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.5,col=finc3,main="K=3:Axis(2,3)")
par(opar)
finc3 = output3$cluster[[1000]]
## visualize
opar <- par(mfrow=c(2,4))
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=finc2,main="K=2:PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=finc2,main="K=2:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.5,col=finc2,main="K=2:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.5,col=finc2,main="K=2:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=finc3,main="K=3:PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=finc3,main="K=3:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.5,col=finc3,main="K=3:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.5,col=finc3,main="K=3:Axis(2,3)")
par(opar)
library(mosub)
finc2 = output2[[1000]]$cluster
output2 = msm(data, K=2, iter=1000)
output3 = msm(data, K=3, iter=1000)
## extract final clustering information
finc2 = output2[[1000]]$cluster
finc3 = output3[[1000]]$cluster
## visualize
opar <- par(mfrow=c(2,4))
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=finc2,main="K=2:PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=finc2,main="K=2:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.5,col=finc2,main="K=2:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.5,col=finc2,main="K=2:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=finc3,main="K=3:PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=finc3,main="K=3:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.5,col=finc3,main="K=3:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.5,col=finc3,main="K=3:Axis(2,3)")
par(opar)
maxiter = 10000
output2 = msm(data, K=2, iter=maxiter)
output3 = msm(data, K=3, iter=maxiter)
## extract final clustering information
finc2 = output2[[maxiter]]$cluster
finc3 = output3[[maxiter]]$cluster
opar <- par(mfrow=c(2,4))
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=finc2,main="K=2:PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=finc2,main="K=2:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.5,col=finc2,main="K=2:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.5,col=finc2,main="K=2:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=finc3,main="K=3:PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=finc3,main="K=3:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.5,col=finc3,main="K=3:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.5,col=finc3,main="K=3:Axis(2,3)")
par(opar)
opar <- par(mfrow=c(2,4))
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=finc2,main="K=2:PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=finc2,main="K=2:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.5,col=finc2,main="K=2:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.5,col=finc2,main="K=2:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=finc3,main="K=3:PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=finc3,main="K=3:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.5,col=finc3,main="K=3:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.5,col=finc3,main="K=3:Axis(2,3)")
par(opar)
length(output2)
heyo = c()
for (i in 1:10000){}
output3[[1]]$U
output3[[2]]$U
output3[[2]]$U[[1]]
as.matrix(output3[[2]]$U[[1]])
library(mosub)
output2 = msm(data, K=2, iter=maxiter)
output3 = msm(data, K=3, iter=maxiter)
library(mosub)
library(mosub)
output3 = msm(data, K=3, iter=maxiter)
output3[[1]]
output3[[1]]$P
output3[[1]]$U
aa = output3[[1]]$U[[1]]
outer(aa,aa)
output3[[1]]$P[[1]]
maxiter = 1000
output2 = msm(data, K=2, iter=maxiter)
output3 = msm(data, K=3, iter=maxiter)
## extract final clustering information
finc2 = output2[[maxiter]]$cluster
finc3 = output3[[maxiter]]$cluster
## visualize
opar <- par(mfrow=c(2,4))
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=finc2,main="K=2:PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=finc2,main="K=2:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.5,col=finc2,main="K=2:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.5,col=finc2,main="K=2:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=finc3,main="K=3:PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=finc3,main="K=3:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.5,col=finc3,main="K=3:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.5,col=finc3,main="K=3:Axis(2,3)")
par(opar)
maxiter = 5000
output2 = msm(data, K=2, iter=maxiter)
output3 = msm(data, K=3, iter=maxiter)
## extract final clustering information
finc2 = output2[[maxiter]]$cluster
finc3 = output3[[maxiter]]$cluster
## visualize
opar <- par(mfrow=c(2,4))
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=finc2,main="K=2:PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=finc2,main="K=2:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.5,col=finc2,main="K=2:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.5,col=finc2,main="K=2:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=finc3,main="K=3:PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=finc3,main="K=3:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.5,col=finc3,main="K=3:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.5,col=finc3,main="K=3:Axis(2,3)")
par(opar)
library(mosub)
maxiter = 5000
output2 = msm(data, K=2, iter=maxiter)
output3 = msm(data, K=3, iter=maxiter)
## extract final clustering information
finc2 = output2[[maxiter]]$cluster
finc3 = output3[[maxiter]]$cluster
## visualize
opar <- par(mfrow=c(2,4))
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=finc2,main="K=2:PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=finc2,main="K=2:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.5,col=finc2,main="K=2:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.5,col=finc2,main="K=2:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=finc3,main="K=3:PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=finc3,main="K=3:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.5,col=finc3,main="K=3:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.5,col=finc3,main="K=3:Axis(2,3)")
par(opar)
library(mosub)
maxiter = 5000
output2 = msm(data, K=2, iter=maxiter, print.progress=FALSE)
output3 = msm(data, K=3, iter=maxiter, print.progress=TRUE)
## extract final clustering information
finc2 = output2[[maxiter]]$cluster
finc3 = output3[[maxiter]]$cluster
## visualize
opar <- par(mfrow=c(2,4))
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=finc2,main="K=2:PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=finc2,main="K=2:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.5,col=finc2,main="K=2:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.5,col=finc2,main="K=2:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=finc3,main="K=3:PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=finc3,main="K=3:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.5,col=finc3,main="K=3:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.5,col=finc3,main="K=3:Axis(2,3)")
par(opar)
library(mosub)
## run MSM algorithm with K=2, 3, and 4
maxiter = 5000
output2 = msm(data, K=2, iter=maxiter)
output3 = msm(data, K=3, iter=maxiter)
output4 = msm(data, K=4, iter=maxiter)
## extract final clustering information
finc2 = output2[[maxiter]]$cluster
finc3 = output3[[maxiter]]$cluster
finc4 = output4[[maxiter]]$cluster
## visualize
opar <- par(mfrow=c(3,4))
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=finc2,main="K=2:PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=finc2,main="K=2:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.5,col=finc2,main="K=2:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.5,col=finc2,main="K=2:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=finc3,main="K=3:PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=finc3,main="K=3:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.5,col=finc3,main="K=3:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.5,col=finc3,main="K=3:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=finc4,main="K=4:PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=finc4,main="K=4:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.5,col=finc4,main="K=4:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.5,col=finc4,main="K=4:Axis(2,3)")
par(opar)
library(mosub)
maxiter = 2500
output2 = msm(data, K=2, iter=maxiter)
output3 = msm(data, K=3, iter=maxiter)
output4 = msm(data, K=4, iter=maxiter)
## extract final clustering information
finc2 = output2[[maxiter]]$cluster
finc3 = output3[[maxiter]]$cluster
finc4 = output4[[maxiter]]$cluster
## visualize
opar <- par(mfrow=c(3,4))
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=finc2,main="K=2:PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=finc2,main="K=2:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.5,col=finc2,main="K=2:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.5,col=finc2,main="K=2:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=finc3,main="K=3:PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=finc3,main="K=3:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.5,col=finc3,main="K=3:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.5,col=finc3,main="K=3:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=finc4,main="K=4:PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=finc4,main="K=4:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.5,col=finc4,main="K=4:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.5,col=finc4,main="K=4:Axis(2,3)")
par(opar)
maxiter = 5000
output2 = msm(data, K=2, iter=maxiter)
output3 = msm(data, K=3, iter=maxiter)
output4 = msm(data, K=4, iter=maxiter)
## extract final clustering information
finc2 = output2[[maxiter]]$cluster
finc3 = output3[[maxiter]]$cluster
finc4 = output4[[maxiter]]$cluster
## visualize
opar <- par(mfrow=c(3,4))
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=finc2,main="K=2:PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=finc2,main="K=2:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.5,col=finc2,main="K=2:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.5,col=finc2,main="K=2:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=finc3,main="K=3:PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=finc3,main="K=3:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.5,col=finc3,main="K=3:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.5,col=finc3,main="K=3:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=finc4,main="K=4:PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=finc4,main="K=4:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.5,col=finc4,main="K=4:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.5,col=finc4,main="K=4:Axis(2,3)")
par(opar)
## test for visualization
set.seed(10)
tester = gen.LP(shape=2, scale=5, sig2=0.05)
data   = tester$data
label  = tester$class
## do PCA for data reduction
proj = base::eigen(stats::cov(data))$vectors[,1:2]
dat2 = data%*%proj
## visualize
opar <- par(mfrow=c(2,2))
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=label,main="PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=label,main="Axis 1 vs 2")
plot(data[,1],data[,3],pch=19,cex=0.5,col=label,main="Axis 1 vs 3")
plot(data[,2],data[,3],pch=19,cex=0.5,col=label,main="Axis 2 vs 3")
par(opar)
## test for visualization
set.seed(10)
tester = gen.LP(shape=2, scale=5, sig2=0.05)
data   = tester$data
label  = tester$class
## do PCA for data reduction
proj = base::eigen(stats::cov(data))$vectors[,1:2]
dat2 = data%*%proj
## visualize
opar <- par(mfrow=c(2,2))
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=label,main="PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=label,main="Axis 1 vs 2")
plot(data[,1],data[,3],pch=19,cex=0.5,col=label,main="Axis 1 vs 3")
plot(data[,2],data[,3],pch=19,cex=0.5,col=label,main="Axis 2 vs 3")
par(opar)
library(mosub)
library(mosub)
library(mosub)
library(mosub)
devtools::document()
library(mosub)
